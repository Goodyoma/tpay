name: Build Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build on Ubuntu 20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libtool \
            autotools-dev \
            automake \
            pkg-config \
            libssl-dev \
            libevent-dev \
            bsdmainutils \
            libboost-system-dev \
            libboost-filesystem-dev \
            libboost-chrono-dev \
            libboost-test-dev \
            libboost-thread-dev \
            software-properties-common \
            libminiupnpc-dev \
            libzmq3-dev \
            libqt5gui5 \
            libqt5core5a \
            libqt5dbus5 \
            qttools5-dev \
            qttools5-dev-tools \
            libprotobuf-dev \
            protobuf-compiler \
            libqrencode-dev

      - name: Install Berkeley DB 4.8
        run: |
          mkdir -p /tmp/db4 && cd /tmp/db4
          wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
          echo '12edc0fd7edd3f93b8a727f3c3f4e1f0db772a725d2cf84b000afdb42a0a6f00  db-4.8.30.NC.tar.gz' | sha256sum -c
          tar -xzvf db-4.8.30.NC.tar.gz
          cd db-4.8.30.NC/build_unix
          ../dist/configure --enable-cxx CXXFLAGS="-std=c++11" --prefix=/usr/local/BerkeleyDB.4.8
          make
          sudo make install

      - name: Set up BDB symlinks
        run: |
          sudo ln -s /usr/local/BerkeleyDB.4.8/lib/libdb-4.8.so /usr/lib/libdb-4.8.so 
          sudo ln -s /usr/local/BerkeleyDB.4.8/lib/libdb_cxx-4.8.so /usr/lib/libdb_cxx-4.8.so

      - name: Clean project
        run: make clean || true

      - name: Configure with BDB paths
        run: |
          ./configure --enable-gui --disable-werror \
            --prefix=`pwd`/depends/x86_64-linux-gnu \
            --bindir=`pwd`/release/bin \
            --libdir=`pwd`/release/lib \
            LDFLAGS="-L/usr/local/BerkeleyDB.4.8/lib -ldb_cxx-4.8" \
            CPPFLAGS="-I/usr/local/BerkeleyDB.4.8/include"

      - name: Build Project
        run: make -j$(nproc)

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Build
          path: release/bin/
