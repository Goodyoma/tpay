on:
  push
jobs:
  macos12:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper
        
      - name: which clang/xcode
        run: clang --version

      - name: Brew install base dependencies
        run: brew install --quiet automake berkeley-db@4 boost@1.76 miniupnpc qt@5 gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb 

      - name: Brew link dependencies
        run: brew link boost@1.76 qt@5 berkeley-db@4

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: tpay-macos12
          path: |
            *.dmg
  
  macos13:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper

      - name: Brew install base dependencies
        run: |
          # A workaround for "The `brew link` step did not complete successfully" error.
          brew install --quiet python@3 || brew link --overwrite python@3
          brew install --quiet automake berkeley-db@4 boost@1.76 miniupnpc qt@5 gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb

      - name: Brew link dependencies
        run: brew link boost@1.76 qt@5 berkeley-db@4 
        
      - name: which clang/xcode
        run: clang --version

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: tpay-macos13
          path: |
            *.dmg

  ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: install boost
        run: wget https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz
      - name: untar boost
        run: tar xzvf boost_1_62_0.tar.gz
        
      - name: go in and run bootstrap
        run: cd boost_1_62_0 && ./bootstrap.sh --prefix=/usr/local --with-libraries=chrono,date_time,iostreams,filesystem,program_options,system,thread,test

      - name: run b2 
        run: cd boost_1_62_0 && sudo ./b2 install
        
      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool autotools-dev automake pkg-config zlib1g-dev libevent-dev bsdmainutils git libseccomp-dev libcap-dev libminiupnpc-dev libqt5gui5 libqt5core5a libqt5webkit5-dev libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --enable-gui --disable-werror --prefix=`pwd`/depends/x86_64-linux-gnu --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4
        
      - name: strip
        run: cd /home/runner/work/tokenpay/tokenpay/src && strip tokenpayd

      - uses: actions/upload-artifact@v4
        with:
          name: tpay-ubuntu20
          path: |
            ./src/tokenpayd